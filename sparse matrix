#include<stdio.h>
# define MAX 100;

void readsparse(int mat[MAX],[3],int *num){
printf("enter the number of non-zero elements")

scanf("%d",&num);
printf("enter the elemenst as row column value");
for(int i=0;i<num;i++){
scanf("%d%d%d,&mat[i][0],&mat[i][1],&mat[1][2]);
}
}
void printsparse(int mat[MAX][3], int num)
printf("row\t column\t value\n")
for(int i=0;i<num;i++)
printf("%d%d%d",&mat[i][0],&mat[i][1],&mat[1][2]);
int addSparse(int a[MAX][3], int na, int b[MAX][3], int nb, int res[MAX][3]) {
    int i = 0, j = 0, k = 0;

    while (i < na && j < nb) {
        if (a[i][0] < b[j][0] || (a[i][0] == b[j][0] && a[i][1] < b[j][1])) {
            // a[i] comes before b[j]
            res[k][0] = a[i][0];
            res[k][1] = a[i][1];
            res[k][2] = a[i][2];
            i++;
        } else if (b[j][0] < a[i][0] || (a[i][0] == b[j][0] && b[j][1] < a[i][1])) {
            // b[j] comes before a[i]
            res[k][0] = b[j][0];
            res[k][1] = b[j][1];
            res[k][2] = b[j][2];
            j++;
        } else {
            
            int sum = a[i][2] + b[j][2];
            if (sum != 0) {
                res[k][0] = a[i][0];
                res[k][1] = a[i][1];
                res[k][2] = sum;
            } else {
                k--; 
            }
            i++;
            j++;
        }
        k++;
    }

    
    while (i < na) {
        res[k][0] = a[i][0];
        res[k][1] = a[i][1];
        res[k][2] = a[i][2];
        i++;
        k++;
    }

    while (j < nb) {
        res[k][0] = b[j][0];
        res[k][1] = b[j][1];
        res[k][2] = b[j][2];
        j++;
        k++;
    }

    return k; 
}


int main() {
    int a[MAX][3], b[MAX][3], res[MAX][3];
    int na, nb, nr;

    printf("Enter first sparse matrix:\n");
    readSparse(a, &na);

    printf("\nEnter second sparse matrix:\n");
    readSparse(b, &nb);

    nr = addSparse(a, na, b, nb, res);

    printf("\nFirst Matrix:\n");
    printSparse(a, na);

    printf("\nSecond Matrix:\n");
    printSparse(b, nb);

    printf("\nSum Matrix:\n");
    printSparse(res, nr);

    return 0;
}
